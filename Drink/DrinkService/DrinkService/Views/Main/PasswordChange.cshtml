@{
    ViewBag.Title = "パスワード変更";
}
<script>
    function checkForm()
    {
        var flag = false;
        if ($('#txtNewPassword').ui().value().length < 8) {
            smat.service.addErrorInfo("NewPassword", $('#txtNewPassword'), "【新しいパスワード】8桁を入力してください。");
            flag = true;
        }

        if (flag || $('#txtNewPassword').ui().value() != $('#txtConfirmPassword').ui().value())
        {
            smat.service.addErrorInfo("same", $('#txtNewPassword'), "【新しいパスワード】と【確認入力】が一致しません。");
            smat.service.addErrorInfo("same", $('#txtConfirmPassword'), "【新しいパスワード】と【確認入力】が一致しません。");
        }
    }
    function successFunc() {
        window.location.href = "/Main/Home";
    }

    function closePasswordChangeForm() {
        window.location.href = "/Main/Home";
    }

    function errorFunc(result) {
        if (result.ErrorKey == "oldPwd") {
            smat.service.addErrorBorder($('#txtOldPassword'));
        }

        if (result.ErrorKey == "newPwd") {
            smat.service.addErrorBorder($('#txtNewPassword'));
        }
    }
</script>

<section class="scrollable wrapper">
    <section class="panel panel-default">
        @using (Html.Smat().BeginForm("mainPasswordEditForm", new { @class = "panel-body", style = "padding-top:0;" }
                ).Actions(actions =>
                {
                    actions.Action("/Main/SavePassword").ActionBtn("btnEditTempSave").CheckForm("checkForm").Error("errorFunc");
                    actions.Action("/Main/SavePassword").ActionBtn("btnEditSave").CheckForm("checkForm").Success("successFunc").Error("errorFunc");
                }
                ))
        {
            <div class="row">
                <div class="col-sm-6 text-left text-center-xs">
                    @Html.Smat().Button("btnEditTempSave").Content("一時保存").HtmlAttributes(new { @class = "btn-warning" })
                    @Html.Smat().Button("btnEditSave").Content("保存").HtmlAttributes(new { @class = "btn-warning" })
                    @(Html.Smat().Button("btnEditClose")
                        .Content("閉じる")
                        .HtmlAttributes(new { @class = "btn-primary" })
                        .Events(events =>
                            {
                                events.Click("closePasswordChangeForm");
                            })
                    )
                </div>
            </div>
            <div class="line line-dashed b-b line-lg pull-in"></div>

            <div class="panel-body" style="padding:5px"></div>
            <div class="form-horizontal">
                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @(Html.Smat().TextBox("txtOldPassword")
                            .Name("OldPwd")
                                        .Label(label =>{
                                            label.Text("現在パスワード");
                                            label.Attrs(new { @class = "input-s" });
                                        }).MaxLength(20)
                .HtmlAttributes(new { @class = "form-control s-required input-s", type = "password" })
                                        
                            )
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @(Html.Smat().TextBox("txtNewPassword")
                            .Name("NewPwd")
                                        .Label(label =>{
                                            label.Text("新しいパスワード");
                                            label.Attrs(new { @class = "input-s" });
                                        }).MaxLength(20)
                .HtmlAttributes(new { @class = "form-control s-required input-s", type = "password" })
                            )
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @(Html.Smat().TextBox("txtConfirmPassword")
                            .Name("ConfirmPwd")
                                        .Label(label =>{
                                            label.Text("確認入力");
                                            label.Attrs(new { @class = "input-s" });
                                        }).MaxLength(20)
                .HtmlAttributes(new { @class = "form-control s-required input-s", type = "password" })
                            )
                        </div>
                    </div>
                </div>
            </div>
        }
    </section>
</section>
