@model  DrinkService.Models.M_Shop
@{
    Layout = "~/Views/Shared/_SubFormLayout.cshtml";
    ViewBag.Title = "店舗管理";
    ViewBag.ContentId = "btnEditClose";
}
<script>

    var shopCD = "@Model.ShopCD";
    var shopType = "@Model.ShopTypeCD";
    var saveFlag = false;

    function successFunc() {
        shopCD = $("#txtEditShopCD").ui().value();
        $("#txtEditShopCD").ui().enable(false);
        $("#btnEditDel").show();
        saveFlag = true;
    }

    function successFunc2() {
        smat.service.closeForm({
            contentId: "shopEditForm",
            result: true
        });
    }

    function successFunc3(result) {
        if (result.ReturnValue == 0) {
            smat.service.closeForm({
                contentId: "shopEditForm",
                result: true
            });
        }
    }

    function errorFunc(result) {
        if (result.ErrorKey == "key") {
            smat.service.addErrorBorder($('#txtEditShopCD'));
        } else if (result.ErrorKey == "ShopName") {
            smat.service.addErrorBorder($('#txtEditShopName'));
        }
    }

    function closeEditForm() {
        smat.service.closeForm({
            contentId: "shopEditForm",
            result: saveFlag
        });
    }

    function checkDel() {
        return "店舗コード" + shopCD + "の店舗を削除しますか？";
    }

    function getParam(params) {
        params.newMode = shopCD == "" ? true : false;
        params.QualifiedsList = $("#ddlQualifieds").ui().value();
        return params;
    }

    function checkShopEditForm() {

        $(".s-fieldError").removeClass("s-fieldError");

        if ($('#txtEditShopCD').ui().value() == "") {
            smat.service.addErrorInfo("ShopCD", $('#txtEditShopCD'), "【店舗コード】を入力してください。");
        }

        if ($('#txtEditShopName').ui().value() == "") {
            smat.service.addErrorInfo("ShopName", $('#txtEditShopName'), "【店舗名】を入力してください。");
        }

        if ($('#ddlRegionCD').ui().value() == "") {
            smat.service.addErrorInfo("RegionCD", $('#ddlRegionCD'), "【地域】を入力してください。");
        }

        if ($('#ddlSysTypeCD').ui().value() == ""
            && (($("#rdoShopTypeCD").ui() != null && $("#rdoShopTypeCD").ui().value() == "1") || shopType == "1")) {
            smat.service.addErrorInfo("SysTypeCD", $('#ddlSysTypeCD'), "【店舗業務区分】を入力してください。");
        }

    }

    function shopTypeCDChange(){
        if ($("#rdoShopTypeCD").ui().value() == "2") {
            $(".div-2").hide();
            $("#dpSystemStartDate").ui().value("");
            $("#ddlSysTypeCD").ui().value("");
        } else {
            $(".div-2").show();
        }
    }
</script>
@{
    bool editFlag = Model.ShopCD == null ? true : false;
    string shopType = Model.ShopTypeCD == "1" ? "店舗" : "管理部署";
}
<section class="scrollable wrapper">
    <section class="panel panel-default">
        @using (Html.Smat().BeginForm("shopEditForm", new { @class = "panel-body", style = "padding-top:0;" }
            ).Actions(actions =>
            {
                actions.Action("/Shop/Save").ActionBtn("btnEditTempSave").CheckForm("checkShopEditForm").GetParam("getParam").Success("successFunc").Error("errorFunc");
                actions.Action("/Shop/Save").ActionBtn("btnEditSave").CheckForm("checkShopEditForm").GetParam("getParam").Success("successFunc2").Error("errorFunc");
                actions.Action("/Shop/Del").ActionBtn("btnEditDel").ConfirmFunc("checkDel").Success("successFunc3");
            }
            ))
        {
            <div class="row">
                <div class="col-sm-6 text-left text-center-xs">
                    @Html.Smat().Button("btnEditTempSave").Content("一時保存").HtmlAttributes(new { @class = "btn-warning" })
                    @Html.Smat().Button("btnEditSave").Content("保存").HtmlAttributes(new { @class = "btn-warning" })
                    @(Html.Smat().Button("btnEditClose")
                            .Content("閉じる")
                            .HtmlAttributes(new { @class = "btn-primary" })
                            .Events(events =>
                            {
                                events.Click("closeEditForm");
                            })
                    )
                    @Html.Smat().Button("btnEditDel").Content("削除").HtmlAttributes(new { @class = "btn-danger" }).Visible(!editFlag)
                </div>
            </div>
            <div class="line line-dashed b-b line-lg pull-in"></div>

            <div class="panel-body" style="padding:5px"></div>
            <div class="form-horizontal">
                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @Html.Smat().TextBox("txtLastSlipNO").Name("LastSlipNO").Value(Model.LastSlipNO).HtmlAttributes(new { style = "display:none;" })
                            @if (editFlag)
                            {
                                 @(Html.Smat().RadioButton("rdoShopTypeCD")
                                        .Name("ShopTypeCD")
                                        .Label(label =>
                                        {
                                            label.Text("区分");
                                            label.Attrs(new { @class = "input-s" });
                                        })
                                        .DataSource(new List<object>() {
                                                    new{text="店舗",value="1"},
                                                    new{text="管理部署",value="2"},
                                        }).HtmlAttributes(new { style = "width:100px;" })
                                           .Value("1").Events(events =>
                                                       {
                                                           events.Change("shopTypeCDChange");
                                                       })
                                )
                            }
                            else
                            {
                                @(Html.Smat().TextBox("txtShopTypeCD")
                                        .Label(label => {
                                            label.Text("区分");
                                            label.Attrs(new { @class = "input-s" });
                                        })
                                        .Value(shopType)
                                        .HtmlAttributes(new { @class = "form-control input-s", style = "width:200px" })
                                        .Enable(editFlag)
                                )
                                
                                @Html.Smat().TextBox("hindShopTypeCD").Name("ShopTypeCD").Value(Model.ShopTypeCD).Enable(false).HtmlAttributes(new { @class = "form-control input-s", style = "display:none;" })
                                
                            }
                           
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @(Html.Smat().TextBox("txtEditShopCD")
                                        .Name("ShopCD")
                                        .Label(
                                                label =>
                                                {
                                                    label.Text("<span style='color:red;'>*</span>店舗コード");
                                                label.Attrs(new { @class = "input-s" });
                                                }
                                              )
                                        .Value(Model.ShopCD)
                                        .MaxLength(7)
                                        .HtmlAttributes(new { @class = "form-control input-s", style = "width:200px" })
                                        .Enable(editFlag)
                            )
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-fix-3">
                        <div class="form-group">
                            @(Html.Smat().TextBox("txtEditShopName")
                            .Name("ShopName")
                            .Label(
                                    label =>
                                    {
                                        label.Text("<span style='color:red;'>*</span>店舗名");
                                        label.Attrs(new { @class = "input-s" });
                                    }
                                  )
                            .Value(Model.ShopName)
                            .MaxLength(30)
                            .HtmlAttributes(new { @class = "form-control input-s-bg"})
                            )
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @(Html.Smat().DropDownList("ddlRegionCD")
                                        .Name("RegionCD")
                                        .Label(
                                                label =>
                                                {
                                                    label.Text("<span style='color:red;'>*</span>地域");
                                                    label.Attrs(new { @class = "input-s" });
                                                }
                                              )
                                        .DataTextField("Text")
                                        .DataValueField("Value")
                                        .CodeKind(DrinkService.Models.ModelBase.CN地域)
                                        .Value(Model.RegionCD)
                                        .HtmlAttributes(new {style = "width:200px" })
                            )
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @(Html.Smat().DropDownList("ddlAreaCD")
                                        .Name("AreaCD")
                                        .Label(
                                                label =>
                                                {
                                                    label.Text("エリア");
                                                    label.Attrs(new { @class = "input-s" });
                                                }
                                              )
                                        .DataTextField("Text")
                                        .DataValueField("Value")
                                        .CodeKind(DrinkService.Models.ModelBase.CNエリア)
                                        //.Value(Model.AreaCD)
                                        .HtmlAttributes(new { style = "width:200px" })
                            )
                        </div>
                    </div>
                </div>
                <div class="row div-2">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @(Html.Smat().DatePicker("dpSystemStartDate")
                                       .Name("SystemStartDate")
                                       .Label(
                                                label =>
                                                {
                                                    label.Text("システム導入日");
                                                    label.Attrs(new { @class = "input-s" });
                                                }
                                              )
                                        .Value(Model.SystemStartDate)
                                        .HtmlAttributes(new { @class = " input-s", style = "margin-left: 0px;" })
                            )
                        </div>
                    </div>
                </div>
                <div class="row div-2">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @(Html.Smat().DropDownList("ddlSysTypeCD")
                                        .Name("SysTypeCD")
                                        .Label(
                                                label =>
                                                {
                                                    label.Text("<span style='color:red;'>*</span>店舗業務区分");
                                                    label.Attrs(new { @class = "input-s" });
                                                }
                                              )
                                        .DataTextField("Text")
                                        .DataValueField("Value")
                                        .CodeKind(DrinkService.Models.ModelBase.CN店舗業務区分)
                                        .Value(Model.SysTypeCD)
                                        .HtmlAttributes(new { style = "width:200px" })
                            )
                        </div>
                    </div>
                </div>

                <div class="row div-2">
                    <div class="col-fix-2">
                        <div class="form-group">
                            <select id="ddlQualifieds" style="width:400px;" multiple="multiple"></select>
                        </div>
                    </div>
                </div>
            </div>
        }
    </section>
</section>

<script>

    var ds = [];

    var QualifiedsListStr = "@ViewBag.QualifiedsList";
    var QualifiedsMstListStr = "@ViewBag.QualifiedsMstList";
    var QualifiedsHadDataListStr = "@ViewBag.QualifiedsHadDataList"; 

    var QualifiedsList = QualifiedsListStr.split(",");
    var QualifiedsMstList = QualifiedsMstListStr.split(",");
    var QualifiedsHadDataList = QualifiedsHadDataListStr.split(",");
    var QualifiedsHadData = {};
    
    if (QualifiedsHadDataListStr) {
        for (var index in QualifiedsHadDataList) {
            QualifiedsHadData[QualifiedsHadDataList[index]] = 1;
        }
    }

    if (QualifiedsMstListStr) {
        for (var i in QualifiedsMstList) {
            ds.push({ Text: QualifiedsMstList[i].split("|")[1], Value: QualifiedsMstList[i].split("|")[0] })
        }
    }

    $("#ddlQualifieds").smatMultiSelect({
        label:{
            text:"研修資格",
            attrs: {
                class:"input-s"
            }
        },
        dataTextField: "Text",
        dataValueField: "Value",
        dataSource: ds,
        select: function(e) {
            // Call preventDefault() to prevent the deselection
            if (QualifiedsHadData[e.ui.uiControl.dataItem(e.item).Value]) {
                smat.service.notice({ msg: "研修資格【" + e.ui.uiControl.dataItem(e.item).Text + "】関連データが存在している為、削除できません。", type: "info" })
                e.preventDefault();
            }
        },
        autoClose: false,
        tagTemplate: function (dataItem) {
            return "<span key='" + dataItem.Value + "'>" + dataItem.Text + "</span>"
        },
        dataBound: function (e) {
            var wrap = $("#ddlQualifieds").closest(".s-multiselect").children(".s-multiselect-wrap");
            var pickBtn = wrap.children(".s-icon").removeClass("s-loading").removeClass("s-loading-hidden").addClass("s-i-arrow-s").css("position", "absolute").css("right", "5px").css("bottom", "10px");
            pickBtn.bind("click", function () {
                $("#ddlQualifieds").ui().uiControl.toggle();
            });
            wrap.find(".s-input").hide();
            wrap.css("min-height", "37px");
        }
    });

    if (QualifiedsList.length > 0) {
        $("#ddlQualifieds").ui().value(QualifiedsList);
        var items = $("#ddlQualifieds_taglist").children(".s-button");
        $.each(items, function () {
            var key = $(this).find("[key]").attr("key");
            if(QualifiedsHadData[key]){
                $(this).find(".s-select").remove();
            }
        })
    }


    var roleCD = "@((ViewBag.LoginUser as DrinkService.Data.Models.UserSession).RoleCD)"
    if (roleCD == '@ModelBase.CN役割_店舗管理者' || roleCD == '@ModelBase.CN役割_ドリンクマネジメント') {
        $("#btnEditDel").hide();
    }

    function getAreaInfo(val) {
        if ($("#ddlRegionCD").ui().value() != "") {
            smat.service.loadJosnData({
                url: "/Code/GetRefCode",
                params: { "RefCD": $("#ddlRegionCD").ui().value(), "Kind": "@(DrinkService.Models.ModelBase.CNエリア)" },
                success: function (result) {
                    debugger;
                    var emptyItem = {};
                    emptyItem.CD = "";
                    emptyItem.Name = "";

                    result.unshift(emptyItem);

                    $("#ddlAreaCD").ui().setDataSource(result);

                    if (val != undefined) {
                        $("#ddlAreaCD").ui().value(val);
                    }

                }
            });
        } else {
            $("#ddlAreaCD").ui().setDataSource([]);

        }
    }

    $(document).ready(function () {
        $("#ddlAreaCD").ui().setDataSource([]);
        $("#ddlRegionCD").ui().uiControl.bind("change", function (e) {
            getAreaInfo("");
        });

        var oldRegionCD = "@(Model.RegionCD)";
        if (oldRegionCD != "") {
            getAreaInfo("@(Model.AreaCD)");
        }

        if ("@Model.ShopTypeCD" == "2") {
            $(".div-2").hide();
        }
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        if (mainRoleCD == mainCN役割_本部参照) {
            //smat.service.lockUIField('shopEditForm');
            $("#btnEditTempSave").ui().visible(false);
            $("#btnEditSave").ui().visible(false);
            $("#btnEditDel").ui().visible(false);
        }
    });
</script> 
                