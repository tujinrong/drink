@model  DrinkService.Models.M_Code
@{
    Layout = "~/Views/Shared/_SubFormLayout.cshtml";
    ViewBag.Title = "コード登録";
    ViewBag.ContentId = "btnEditClose";
}
<script>

    var kind = "@Model.Kind";
    var code = "@Model.CD";
    var saveFlag = false;

    function successFunc() {
        kind = $("#ddlKind").ui().text();
        code = $("#txtCD").ui().value();
        $("#ddlKind").ui().enable(false);
        $("#txtCD").ui().enable(false);
        $("#btnEditDel").show();
        saveFlag = true;
    }
    function successFunc2() {
        smat.service.notice({ msg: "保存完了しました。" });
        smat.service.closeForm({
            contentId: "codeEditForm",
            result: true
        });
    }
    function successFunc3(result) {
        if (result.ReturnValue == 0) {
            smat.service.closeForm({
                contentId: "codeEditForm",
                result: true
            });
        }
    }

    function errorFunc(result) {
        if (result.ErrorKey == "key") {
            smat.service.addErrorBorder($('#ddlKind'));
            smat.service.addErrorBorder($('#txtCD'));
        } else if (result.ErrorKey == "Name") {
            smat.service.addErrorBorder($('#txtName'));
        }
    }

    function closeEditForm() {
        smat.service.closeForm({
            contentId: "codeEditForm",
            result: saveFlag
        });
    }

    function checkDel() {
        return "種別" + kind + "、コード" + code + "のコードを削除しますか？";
    }

    function getParam(params) {
        params.newMode = code == "" ? true : false;
        return params;
    }

    function checkCodeEditForm() {

        $(".s-fieldError").removeClass("s-fieldError");

        if ($('#ddlKind').ui().value() == "") {
            smat.service.addErrorInfo("CD", $('#ddlKind'), "【種別】を選択ください");
        }

        if ($('#txtCD').ui().value() == "") {
            smat.service.addErrorInfo("CD", $('#txtCD'), "【コード】を入力してください。");
        }

        if ($('#txtName').ui().value() == "") {
            smat.service.addErrorInfo("Name", $('#txtName'), "【名称】を入力してください。");
        }

    }
</script>

@{
    bool editFlag = Model.CD == null ? true : false;
    
}

<section class="scrollable wrapper">
    <section class="panel panel-default">
        @using (Html.Smat().BeginForm("codeEditForm", new { @class = "panel-body", style = "padding-top:0;" }
            ).Actions(actions =>
            {
                actions.Action("/Code/Save").ActionBtn("btnEditTempSave").CheckForm("checkCodeEditForm").GetParam("getParam").Success("successFunc").Error("errorFunc");
                actions.Action("/Code/Save").ActionBtn("btnEditSave").CheckForm("checkCodeEditForm").GetParam("getParam").Success("successFunc2").Error("errorFunc");
                actions.Action("/Code/Del").ActionBtn("btnEditDel").ConfirmFunc("checkDel").Success("successFunc3");
            }
            ))
        {
            <div class="row">
                <div class="col-sm-6 text-left text-center-xs">
                    @Html.Smat().Button("btnEditTempSave").Content("一時保存").HtmlAttributes(new { @class = "btn-warning" })
                    @Html.Smat().Button("btnEditSave").Content("保存").HtmlAttributes(new { @class = "btn-warning" })
                    @(Html.Smat().Button("btnEditClose")
                                .Content("閉じる")
                                .HtmlAttributes(new { @class = "btn-primary" })
                                .Events(events =>
                                {
                                    events.Click("closeEditForm");
                                })
                    )
                    @Html.Smat().Button("btnEditDel").Content("削除").HtmlAttributes(new { @class = "btn-danger" }).Visible(!editFlag)
                </div>
            </div>
            <div class="line line-dashed b-b line-lg pull-in"></div>

            <div class="panel-body" style="padding:5px"></div>
            <div class="form-horizontal">
                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @(Html.Smat().DropDownList("ddlKind")
                                        .Name("Kind")
                                        .Label(label =>
                                        {
                                            label.Text("<span style='color:red;'>*</span>種別");
                                        })
                                        .Value(Model.Kind)
                                        .CodeKind(DrinkService.Models.ModelBase.CN区分)
                                        .HtmlAttributes(new { style = "width:200px" })
                                        .Enable(editFlag)
                            )
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @Html.Smat().TextBox("txtCD").Name("CD").Label("<span style='color:red;'>*</span>コード").Value(Model.CD).MaxLength(4).HtmlAttributes(new { @class = "form-control input-s" }).Enable(editFlag)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @Html.Smat().TextBox("txtName").Name("Name").Label("<span style='color:red;'>*</span>名称").Value(Model.Name).MaxLength(10).HtmlAttributes(new { @class = "form-control input-s" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @Html.Smat().TextBox("txtRefNo").Name("RefNo").Label("関連数値").Value(Model.RefNo).MaxLength(4).HtmlAttributes(new { @class = "form-control input-s onlyNum" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-fix-2">
                        <div class="form-group">
                            @Html.Smat().TextBox("txtRefCD").Name("RefCD").Label("関連コード").Value(Model.RefCD).MaxLength(4).HtmlAttributes(new { @class = "form-control input-s" })
                        </div>
                    </div>
                </div>
            </div>
        }
    </section>
</section>

<script type="text/javascript">
    $(document).ready(function () {
        if (mainRoleCD == mainCN役割_本部参照) {
            //smat.service.lockUIField('codeEditForm');
            $("#btnEditTempSave").ui().visible(false);
            $("#btnEditSave").ui().visible(false);
            $("#btnEditDel").ui().visible(false);
        }

        kind = $("#ddlKind").ui().text();
    });
</script> 