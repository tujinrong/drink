@model  DrinkService.Models.M_Staff
@{
    Layout = "~/Views/Shared/_SubFormLayout.cshtml";
    ViewBag.Title = "担当者管理";
    ViewBag.ContentId = "btnEditClose";
}
<script>
    var shopTypeCD = "@ViewBag.shopTypeCD";

    function getReferShop() {
        var param = {
            shopTypeCD: shopTypeCD
        }
        return param;
    }

    var afterReferShop = function (data) {
        if (data != undefined) {
            shopTypeCD = data["ShopTypeCD"];
            if (shopTypeCD == "1") {
                $("#txtShopType").ui().value("店舗");
            } else if (shopTypeCD == "2") {
                $("#txtShopType").ui().value("管理部署");
            }
        }

        $("#ddlRole").ui().refresh();
    }

    var staffCD = "@Model.StaffCD";
    var saveFlag = false;

    function successFunc() {
        staffCD = $("#txtStaffCD").ui().value();
        $("#txtStaffCD").ui().enable(false);
        $("#btnEditDel").show();
        saveFlag = true;
    }

    function successFunc2() {

        smat.service.closeForm({
            contentId: "staffEditForm",
            result: true
        });
    }
    function successFunc3(result) {
        if (result.ReturnValue == 0) {
            smat.service.closeForm({
                contentId: "staffEditForm",
                result: true
            });
        }
    }

    function errorFunc(result) {
        if (result.ErrorKey == "key") {
            smat.service.addErrorBorder($('#referEditShop'));
            smat.service.addErrorBorder($('#ShopName_EditName'));
            smat.service.addErrorBorder($('#txtStaffCD'));
        }
    }

    function closeEditForm() {
        smat.service.closeForm({
            contentId: "staffEditForm",
            result: saveFlag
        });
    }

    function checkDel() {
        return "担当者コード" + staffCD + "の担当者を削除しますか？";
    }

    function getParam(params) {
        params.newMode = staffCD == "" ? true : false;
        return params;
    }

    function checkStaffEditForm() {
        $(".s-fieldError").removeClass("s-fieldError");

        if ($('#referEditShop').ui().value() == "") {
            smat.service.addErrorInfo("ShopCD", $('#referEditShop'), "【店舗】を入力してください。");
        }

        if ($('#ddlRole').ui().value() == "") {
            smat.service.addErrorInfo("RoleCD", $('#ddlRole'), "【役割】を選択ください。");
        }

        if ($('#txtStaffCD').ui().value() == "") {
            smat.service.addErrorInfo("StaffCD", $('#txtStaffCD'), "【担当者コード】を入力してください。");
        } else if ($('#txtStaffCD').ui().value().length < 5) {
            smat.service.addErrorInfo("StaffCD", $('#txtStaffCD'), "【担当者コード】5桁で入力してください。");
        }

        if ($('#txtEditStaffName').ui().value() == "") {
            smat.service.addErrorInfo("StaffName", $('#txtEditStaffName'), "【担当者名】を入力してください。");
        }

        if ($('#txtStaffPassword').ui().value() == "") {
            smat.service.addErrorInfo("Password", $('#txtStaffPassword'), "【パスワード】を入力してください。");
        } else if ($('#txtStaffPassword').ui().value().length < 8) {
            smat.service.addErrorInfo("Password", $('#txtStaffPassword'), "【パスワード】8桁以上を入力してください。");
        }

    }
</script>
@{
    bool editFlag = Model.StaffCD == null ? true : false;

}
<section class="scrollable wrapper">
    <section class="panel panel-default">
            
                @using (Html.Smat().BeginForm("staffEditForm", new { @class = "panel-body", style = "padding-top:0;" }).Actions(actions =>
                            {
                                actions.Action("/Staff/Save").ActionBtn("btnEditTempSave").CheckForm("checkStaffEditForm").GetParam("getParam").Success("successFunc").Error("errorFunc");
                                actions.Action("/Staff/Save").ActionBtn("btnEditSave").CheckForm("checkStaffEditForm").GetParam("getParam").Success("successFunc2").Error("errorFunc");
                                actions.Action("/Staff/Del").ActionBtn("btnEditDel").ConfirmFunc("checkDel").Success("successFunc3");
                            })
                        )
                {
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-sm-6 text-left text-center-xs">
                                @Html.Smat().Button("btnEditTempSave").Content("一時保存").HtmlAttributes(new { @class = "btn-warning" })
                                @Html.Smat().Button("btnEditSave").Content("保存").HtmlAttributes(new { @class = "btn-warning" })
                                @(Html.Smat().Button("btnEditClose")
                                            .Content("閉じる")
                                            .HtmlAttributes(new { @class = "btn-primary" })
                                            .Events(events =>{
                                                events.Click("closeEditForm");
                                            })
                                )
                                @Html.Smat().Button("btnEditDel").Content("削除").HtmlAttributes(new { @class = "btn-danger" }).Visible(!editFlag)
                                
                            </div>
                        </div>
                        <div class="line line-dashed b-b line-lg pull-in"></div>

                        <div class="panel-body" style="padding:5px"></div>
                        <div class="form-horizontal">
                            <div class="row">
                                <div class="col-fix-2">
                                    <div class="form-group">
                                        @(Html.Smat().TextBox("txtShopType")
                                                .Label(label =>{
                                                    label.Text("<span style='color:red;'>*</span>所属区分");
                                                        label.Attrs(new { @class = "input-s" });
                                                })
                                                .Enable(false)
                                                .HtmlAttributes(new { @class = "form-control input-s s-state-disabled" })

                                        )
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-fix-2">
                                    <div class="form-group">
                                        @if ((ViewBag.LoginUser as DrinkService.Data.Models.UserSession).IsShopRole())
                                        {
                                            
                                            @Html.Smat().TextBox("ShopName_EditName").Label(label => { label.Text("<span style='color:red;'>*</span>部署店舗"); label.Attrs(new { @class = "input-s" }); }).Value((ViewBag.LoginUser as DrinkService.Data.Models.UserSession).ShopName).Enable(false).HtmlAttributes(new { @class = "form-control input-s" })
                                            @Html.Smat().TextBox("referEditShop").Name("ShopCD").Value((ViewBag.LoginUser as DrinkService.Data.Models.UserSession).ShopCD).Enable(false).HtmlAttributes(new { @class = "form-control input-s", style = "display:none;" })
                                            <script type="text/javascript">
                                                $("#txtShopType").ui().value("店舗");
                                            </script>
                                        }
                                        else
                                        {
                                            @Html.Smat().Refer("referEditShop").Name("ShopCD").Label(label => { label.Text("<span style='color:red;'>*</span>部署店舗"); label.Attrs(new { @class = "input-s" }); }).ReferKey("referShop").Value(Model.ShopCD).GetParam("getReferShop").AfterSetValue("afterReferShop").HtmlAttributes(new { style = "width:200px;" }).Enable(editFlag)
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-fix-2">
                                    <div class="form-group">
                                        @(Html.Smat().DropDownList("ddlRole")
                                                    .Name("RoleCD")
                                                    .Label(label =>
                                                    {
                                                        label.Text("<span style='color:red;'>*</span>役割");
                                                        label.Attrs(new { @class = "input-s" });
                                                    })
                                                    .DataTextField("Text")
                                                    .DataValueField("Value")
                                                    .CodeKind(DrinkService.Models.ModelBase.CN役割)
                                                    .Value(Model.RoleCD)
                                                    .HtmlAttributes(new { style = "width:200px" })
                                        )
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-fix-2">
                                    <div class="form-group">
                                        @Html.Smat().TextBox("txtStaffCD").Name("StaffCD").Label(label => { label.Text("<span style='color:red;'>*</span>担当者コード"); label.Attrs(new { @class = "input-s" }); }).Value(Model.StaffCD).MaxLength(5).HtmlAttributes(new { @class = "form-control input-s onlyNumAlpha" }).Enable(editFlag)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-fix-2">
                                    <div class="form-group">
                                        @Html.Smat().TextBox("txtEditStaffName").Name("StaffName").Label(label => { label.Text("<span style='color:red;'>*</span>担当者名"); label.Attrs(new { @class = "input-s" }); }).Value(Model.StaffName).MaxLength(10).HtmlAttributes(new { @class = "form-control input-s" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-fix-2">
                                    <div class="form-group">
                                        @Html.Smat().TextBox("txtStaffPassword").Name("Password").Label(label => { label.Text("<span style='color:red;'>*</span>パスワード"); label.Attrs(new { @class = "input-s" }); }).Value(Model.Password).MaxLength(20).HtmlAttributes(new { @class = "form-control input-s onlyHalfNumAlpha" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-fix-2">
                                    <div class="form-group">
                                        @Html.Smat().TextBox("txtStaffSosikinCD").Name("SosikinCD").Label(label => { label.Text("組織員コード"); label.Attrs(new { @class = "input-s" }); }).Value(Model.SosikinCD).MaxLength(8).HtmlAttributes(new { @class = "form-control input-s onlyHalfNumAlpha" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }       
    </section>

</section>

<script type="text/javascript">

    var getRoleIgnoreItem = function ()
    {
        var ignoreItem = [];
        //var typeCD;
        //if ($("#referEditShop").ui().dataItem == undefined) {
        //    typeCD = "1";
        //}
        //else {
        //    typeCD = $("#referEditShop").ui().dataItem['ShopTypeCD'];
        //}

        if (shopTypeCD == "1") {
            ignoreItem = ["1", "2", "6"];
        } else if (shopTypeCD == "2") {
            ignoreItem = ["3", "4","5"];
        }
        return ignoreItem;
    }

    $(document).ready(function () {
        $("#ddlRole").ui().setIgnoreFunc(getRoleIgnoreItem);
        $("#ddlRole").ui().refresh();

        if (shopTypeCD == "1") {
            $("#txtShopType").ui().value("店舗");
        } else if (shopTypeCD == "2") {
            $("#txtShopType").ui().value("管理部署");
        }
    });

</script>

<script type="text/javascript">
    $(document).ready(function () {
        if (mainRoleCD == mainCN役割_本部参照) {
            //smat.service.lockUIField('staffEditForm');
            $("#btnEditTempSave").ui().visible(false);
            $("#btnEditSave").ui().visible(false);
            $("#btnEditDel").ui().visible(false);
        }
    });
</script> 