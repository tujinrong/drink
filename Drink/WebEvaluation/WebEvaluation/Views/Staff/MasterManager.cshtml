@model PagedList.IPagedList<WebEvaluation.ViewModels.StaffViewModel>
@using PagedList.Mvc;
@{
    ViewBag.IMG = "../../Content/images/ic-staff.png";
    ViewBag.color = "#7f00ba";
    ViewBag.Title = "社員管理";

    var pageNum = 1;
}
<body>
    <div class="jumbotron">
        <div style="padding-top:15px"></div>
        <!--社員マスタ＆BUTTON--->
        @using (Html.BeginForm("MasterManager", "Staff", FormMethod.Get, new { @class = "form-horizontal" }))
        {
            @Html.Hidden("isPostBack", ViewBag.isPostBack as string)

        <!--条件検索-->
            <div class="col-lg-4" style="padding-left:0px"><font color="#aaaaaa">検索条件</font></div>
            <div class="col-lg-8 text-right" style="padding-right:0px">
                <a href="../../Shop/StaffDataImport">社員インポート</a>
            </div>
            <table class="table form-table " border="0">
                <tr>
                    <td align="right" width="80px" class="edit-title">組織名：</td>
                    <td width="200px">
                        @Html.UnitDropDownList("UnitCD", ViewBag.UnitCD as string, new { @class = "form-control input-sm" })
                    </td>
                    <td align="right" width="120px" class="edit-title">社員番号：</td>
                    <td width="10%">
                        @Html.TextBox("staffCd", ViewBag.staffCd as string, new { @class = "form-control input-sm", size = "10" })
                    </td>
                    <td align="right" width="100px" class="edit-title">氏名漢字：</td>
                    <td width="10%">
                        @Html.TextBox("name", ViewBag.name as string, new { @class = "form-control input-sm", size = "10" })
                    </td>
                    <td align="right" width="100px" class="edit-title">氏名カナ：</td>
                    <td width="10%">
                        @Html.TextBox("kanaName", ViewBag.kanaName as string, new { @class = "form-control input-sm", size = "10" })
                    </td>
                    @if ((Session["user"] as WebEvaluation.DataModels.UserSession).RoleCD == "04" || (Session["user"] as WebEvaluation.DataModels.UserSession).RoleCD == "09")
                    {
                        <td></td>
                    }
                </tr>
            </table>
            <div class="row" style="padding-top:15px">
                <div class="col-lg-12 text-center">
                    <button type="submit" class="btn btn-primary btn-sm">&nbsp;検&nbsp;&nbsp;索&nbsp;</button>
                    <button id="csv_btn" class="btn btn-primary btn-sm" type="button">CSV出力</button>
                    @if ((Session["user"] as WebEvaluation.DataModels.UserSession).RoleCD == "04" || (Session["user"] as WebEvaluation.DataModels.UserSession).RoleCD == "09")
                    {
                        @Html.ButtonAction(false, "新規社員", "../Staff/Create/" + null, new { UnitCD = ViewBag.UnitCD, staffCd = ViewBag.staffCd, name = ViewBag.name, kanaName = ViewBag.kanaName, isPostBack = ViewBag.isPostBack }, new { @class = "btn btn-primary btn-sm" })
                    }
                    </div>
            </div>
        }
        @if (null != Model && Model.Count > 0)
        {
            pageNum = Model.PageNumber;
        <!--社員一覧-->

            <div class="col-lg-4" style="padding-left:0px"><font color="#aaaaaa">社員一覧</font></div>
            <div class="col-lg-8 text-right" style="padding-right:0px">
                @Html.PagedListPager(Model, page => Url.Action("MasterManager", new { page, UnitCD = ViewBag.UnitCD, staffCd = ViewBag.staffCd, name = ViewBag.name, kanaName = ViewBag.kanaName, isPostBack = ViewBag.isPostBack }))
            </div>
            <table class="table form-table table-hover">
                <thead>
                    <tr>
                        <th class="text-left">現在組織</th>
                        <th class="text-left" width="8%">社員番号</th>
                        <th class="text-left">氏名漢字</th>
                        <th class="text-left">氏名カナ</th>
                        <th class="text-center" width="5%">性別</th>
                        <th class="text-left" width="10%"> 入社年月日</th>
                        <th class="text-left">役職</th>
                        <th class="text-left">職種</th>
                        <th class="text-left">権限</th>
                        <th class="text-left"></th>
                    </tr>
                </thead>
                @foreach (var item in Model)
                {
                    <tr class="">
                        <td class="text-left">
                            @Html.DisplayFor(modelItem => item.UnitName)
                        </td>
                        <td class="text-left">
                            @Html.DisplayFor(modelItem => item.StaffCD)
                        </td>
                        <td class="text-left">
                            @Html.DisplayFor(modelItem => item.StaffName)
                        </td>
                        <td class="text-left">
                            @Html.DisplayFor(modelItem => item.StaffKana)
                        </td>

                        @if (item.Sex == "1")
                        {
                            <td class="text-center">男</td>
                        }
                        else
                        {
                            <td class="text-center">女</td>
                        }

                        <td>
                            @Html.DisplayFor(modelItem => item.EnrollmentDate)
                        </td>
                        <td align="left">
                            @Html.DisplayFor(modelItem => item.Yakusyoku)
                        </td>
                        <td align="left">
                            @Html.DisplayFor(modelItem => item.Duty)
                        </td>
                        <td class="text-left">
                            @Html.DisplayFor(modelItem => item.RoleCD)
                        </td>
                        @if ((Session["user"] as WebEvaluation.DataModels.UserSession).RoleCD == "04" || (Session["user"] as WebEvaluation.DataModels.UserSession).RoleCD == "09")
                        {
                            <td>
                                @Html.ButtonAction(false, "編集", "Edit/" + @item.StaffCD, new { page = Model.PageNumber, UnitCD = ViewBag.UnitCD, staffCd = ViewBag.staffCd, name = ViewBag.name, kanaName = ViewBag.kanaName }, new { @class = "btn btn-primary btn-xs" }) |
                                <button class="btn btn-danger btn-xs" type="button" onclick="javascript:staffDelete('@item.StaffCD')">削除</button>
                            </td>
                        }
                    </tr>
                }
            </table>

            @Html.PagedListPager(Model, page => Url.Action("MasterManager", new { page, UnitCD = ViewBag.UnitCD, staffCd = ViewBag.staffCd, name = ViewBag.name, kanaName = ViewBag.kanaName, isPostBack = ViewBag.isPostBack }))
        }
    </div>
</body>

<script type="text/javascript">
    function staffDelete(staffCD) {
        if (confirm("社員№：" + staffCD + "　の社員を削除しますか？")) {

            var UnitCD = "@ViewBag.UnitCD";
            var staffCd = "@ViewBag.staffCd";
            var name = "@ViewBag.name";
            var kanaName = "@ViewBag.kanaName";
            var page = "@pageNum";

            var url = "/Staff/Delete/" + staffCD + "?UnitCD=" + UnitCD + "&staffCd=" + staffCd + "&name=" + name + "&kanaName=" + kanaName + "&page=" + page + "";
            window.location = url;
        }
    }

    function getParam() {
        var p = {
            UnitCD: $("#UnitCD").val(),
            staffCd: $("#staffCd").val(),
            name: $("#name").val(),
            kanaName: $("#kanaName").val()
        }
                    

        return p;
    }

    $("#csv_btn").bind('click', function (e) {

        var p = getParam();

        SMAT.Service.getServerFile({
            url: "@Url.Action("csv")",
            params: p
    });
    });
</script>
